function unaries = getUnaries(I,lambda,hist_fg,hist_bg, seed_fg, seed_bg)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Get Unaries for all pixels in inputImg, using the foreground and
% background color histograms, and enforcing hard constraints on pixels
% marked by the user as foreground and background
% 
% INPUT :
% - I       : color image
% - hist_fg : foreground color histogram
% - hist_bg : background color histogram
% - seed_fg : pixels marked as foreground by the user
% - seed_bg : pixels marked as background by the user
% 
% OUTPUT :
% - unaries : Nx2 (FG cost and BG cost) matrix containing the unary cost for every pixels in I
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% TODO
rows = size(I, 1);
cols = size(I, 2);
N = rows * cols;

img_rgb = zeros(N, 3);
for j=1:cols
    for i=1:rows
        img_rgb((j - 1) * rows + i,:) = I(i, j, :);
    end
end

histRes = 32;
numColorValue = 256;
step = numColorValue / histRes;
rgbIntens = zeros(N, 3);
for i=1:histRes
    index_r = img_rgb(:,1) >= step * (i-1) & img_rgb(:,1) < step * i;
    index_g = img_rgb(:,2) >= step * (i-1) & img_rgb(:,2) < step * i;
    index_b = img_rgb(:,3) >= step * (i-1) & img_rgb(:,3) < step * i;
    rgbIntens(index_r,1) = i;
    rgbIntens(index_g,2) = i;
    rgbIntens(index_b,3) = i;
end

unaries = zeros(N, 2);
idx_fg = (seed_fg(:,1) - 1).* rows + seed_fg(:,2);
idx_bg = (seed_bg(:,1) - 1).* rows + seed_bg(:,2);
fg_count = 1;
bg_count = 1;

for i=1:N
    if find(idx_fg == i)
        unaries(i,1) = 0;
        unaries(i,2) = inf;
        fg_count = fg_count + 1;
    elseif find(idx_bg == i)
        unaries(i,1) = inf;
        unaries(i,2) = 0;
        bg_count = bg_count + 1;
    else
        hist_fgValue = hist_fg(rgbIntens(i,1), rgbIntens(i,2), rgbIntens(i,3));
        hist_bgValue = hist_bg(rgbIntens(i,1), rgbIntens(i,2), rgbIntens(i,3));
        unaries(i, 1) = -log(hist_fgValue + 10^(-10));
        unaries(i, 2) = -log(hist_bgValue + 10^(-10));
    end
    
    if i == 37541
        hist_fgValue = hist_fg(rgbIntens(i,1), rgbIntens(i,2), rgbIntens(i,3));
        hist_bgValue = hist_bg(rgbIntens(i,1), rgbIntens(i,2), rgbIntens(i,3));
        disp(hist_fgValue + ", " +hist_bgValue);
    end
end

unaries = lambda.*unaries;

return